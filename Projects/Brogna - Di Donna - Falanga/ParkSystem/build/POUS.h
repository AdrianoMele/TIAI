#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// FUNCTION_BLOCK PYTHON_EVAL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_EVAL;

void PYTHON_EVAL_init__(PYTHON_EVAL *data__, BOOL retain);
// Code part
void PYTHON_EVAL_body__(PYTHON_EVAL *data__);
// FUNCTION_BLOCK PYTHON_POLL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_POLL;

void PYTHON_POLL_init__(PYTHON_POLL *data__, BOOL retain);
// Code part
void PYTHON_POLL_body__(PYTHON_POLL *data__);
// FUNCTION_BLOCK PYTHON_GEAR
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(UINT,N)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  PYTHON_EVAL PY_EVAL;
  __DECLARE_VAR(UINT,COUNTER)
  __DECLARE_VAR(UINT,ADD10_OUT)
  __DECLARE_VAR(BOOL,EQ13_OUT)
  __DECLARE_VAR(UINT,SEL15_OUT)
  __DECLARE_VAR(BOOL,AND7_OUT)

} PYTHON_GEAR;

void PYTHON_GEAR_init__(PYTHON_GEAR *data__, BOOL retain);
// Code part
void PYTHON_GEAR_body__(PYTHON_GEAR *data__);
__DECLARE_ARRAY_TYPE(__ARRAY_OF_INT_10,INT,[10])
// FUNCTION_BLOCK GENERA
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,GENERATE)
  __DECLARE_VAR(INT,WEIGHT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(__ARRAY_OF_INT_10,VEICOLI)
  __DECLARE_VAR(INT,CURRENT_ARRAY_POS)

} GENERA;

void GENERA_init__(GENERA *data__, BOOL retain);
// Code part
void GENERA_body__(GENERA *data__);
// FUNCTION_BLOCK VEHICLE_CNT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,CONFIRM_ENTER)
  __DECLARE_VAR(BOOL,CONFIRM_EXIT)
  __DECLARE_VAR(REAL,VEICOLO_IN)
  __DECLARE_VAR(REAL,VEICOLO_OUT)
  __DECLARE_VAR(INT,TOT_AUTO)
  __DECLARE_VAR(INT,TOT_MOTO)
  __DECLARE_VAR(INT,TOT_CAMION)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(INT,CAP)
  R_TRIG R_TRIG0;
  CTUD CTUD0;
  CTUD CTUD1;
  CTUD CTUD2;
  R_TRIG R_TRIG1;
  __DECLARE_VAR(BOOL,EQ13_ENO)
  __DECLARE_VAR(BOOL,EQ13_OUT)
  R_TRIG R_TRIG2;
  __DECLARE_VAR(BOOL,EQ26_ENO)
  __DECLARE_VAR(BOOL,EQ26_OUT)
  R_TRIG R_TRIG3;
  __DECLARE_VAR(BOOL,EQ10_ENO)
  __DECLARE_VAR(BOOL,EQ10_OUT)
  R_TRIG R_TRIG4;
  __DECLARE_VAR(BOOL,EQ23_ENO)
  __DECLARE_VAR(BOOL,EQ23_OUT)
  R_TRIG R_TRIG5;
  __DECLARE_VAR(BOOL,EQ14_ENO)
  __DECLARE_VAR(BOOL,EQ14_OUT)
  R_TRIG R_TRIG6;
  __DECLARE_VAR(BOOL,EQ27_ENO)
  __DECLARE_VAR(BOOL,EQ27_OUT)
  R_TRIG R_TRIG7;

} VEHICLE_CNT;

void VEHICLE_CNT_init__(VEHICLE_CNT *data__, BOOL retain);
// Code part
void VEHICLE_CNT_body__(VEHICLE_CNT *data__);
// FUNCTION_BLOCK GETTONIERA
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,ENABLE)
  __DECLARE_VAR(BOOL,EURO_1)
  __DECLARE_VAR(BOOL,EURO_2)
  __DECLARE_VAR(BOOL,EURO_50C)
  __DECLARE_VAR(BOOL,ORE)
  __DECLARE_VAR(REAL,TARIFFA)
  __DECLARE_VAR(REAL,PREZZO)
  __DECLARE_VAR(REAL,TOT_MON)
  __DECLARE_VAR(INT,HRS)
  __DECLARE_VAR(BOOL,APRI_SBARRA)
  __DECLARE_VAR(REAL,RESTO)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(REAL,TOT)
  __DECLARE_VAR(REAL,PRC)
  __DECLARE_VAR(INT,ORA)
  R_TRIG R_TRIG0;
  R_TRIG R_TRIG1;
  R_TRIG R_TRIG2;
  R_TRIG R_TRIG3;
  R_TRIG R_TRIG4;
  CTUD CTUD0;
  R_TRIG R_TRIG5;
  __DECLARE_VAR(REAL,MUL182_OUT)
  __DECLARE_VAR(REAL,ADD185_OUT)
  __DECLARE_VAR(BOOL,GE14_ENO)
  __DECLARE_VAR(BOOL,GE14_OUT)
  R_TRIG R_TRIG6;
  __DECLARE_VAR(REAL,BOOL_TO_REAL108_OUT)
  __DECLARE_VAR(REAL,BOOL_TO_REAL109_OUT)
  __DECLARE_VAR(REAL,MUL121_OUT)
  __DECLARE_VAR(REAL,BOOL_TO_REAL150_OUT)
  __DECLARE_VAR(REAL,MUL151_OUT)
  __DECLARE_VAR(BOOL,ADD16_ENO)
  __DECLARE_VAR(REAL,ADD16_OUT)
  R_TRIG R_TRIG7;
  __DECLARE_VAR(BOOL,SUB171_ENO)
  __DECLARE_VAR(REAL,SUB171_OUT)
  __DECLARE_VAR(BOOL,MOVE134_ENO)
  __DECLARE_VAR(REAL,MOVE134_OUT)
  __DECLARE_VAR(BOOL,MOVE165_ENO)
  __DECLARE_VAR(INT,MOVE165_OUT)
  __DECLARE_VAR(INT,LIMIT200_OUT)
  __DECLARE_VAR(REAL,INT_TO_REAL181_OUT)
  __DECLARE_VAR(BOOL,BOOL_TO_INT161_ENO)
  __DECLARE_VAR(INT,BOOL_TO_INT161_OUT)
  __DECLARE_VAR(INT,ADD168_OUT)

} GETTONIERA;

void GETTONIERA_init__(GETTONIERA *data__, BOOL retain);
// Code part
void GETTONIERA_body__(GETTONIERA *data__);
// FUNCTION_BLOCK VEHICLE_SEL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,INVIO)
  __DECLARE_VAR(BOOL,SLCT)
  __DECLARE_VAR(INT,WEIGHT)
  __DECLARE_VAR(BOOL,ABILITA)
  __DECLARE_VAR(STRING,CAT)
  __DECLARE_VAR(REAL,VEICOLO)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(INT,VEICLEDETECT)
  __DECLARE_VAR(INT,TIPO)
  __DECLARE_VAR(REAL,AUTO)
  __DECLARE_VAR(REAL,MOTO)
  __DECLARE_VAR(REAL,CAMION)
  R_TRIG R_TRIG0;
  __DECLARE_VAR(BOOL,GT59_OUT)
  __DECLARE_VAR(BOOL,LE39_OUT)
  __DECLARE_VAR(BOOL,AND61_OUT)
  __DECLARE_VAR(INT,BOOL_TO_INT49_OUT)
  __DECLARE_VAR(BOOL,MOVE63_ENO)
  __DECLARE_VAR(INT,MOVE63_OUT)
  __DECLARE_VAR(BOOL,GT42_OUT)
  __DECLARE_VAR(BOOL,LE45_OUT)
  __DECLARE_VAR(BOOL,AND44_OUT)
  __DECLARE_VAR(INT,BOOL_TO_INT2_OUT)
  __DECLARE_VAR(INT,MUL50_OUT)
  __DECLARE_VAR(BOOL,MOVE64_ENO)
  __DECLARE_VAR(INT,MOVE64_OUT)
  __DECLARE_VAR(BOOL,GT47_OUT)
  __DECLARE_VAR(INT,BOOL_TO_INT3_OUT)
  __DECLARE_VAR(INT,MUL5_OUT)
  __DECLARE_VAR(BOOL,MOVE66_ENO)
  __DECLARE_VAR(INT,MOVE66_OUT)
  __DECLARE_VAR(BOOL,EQ56_ENO)
  __DECLARE_VAR(BOOL,EQ56_OUT)
  __DECLARE_VAR(BOOL,MUX1_ENO)
  __DECLARE_VAR(REAL,MUX1_OUT)
  __DECLARE_VAR(INT,BOOL_TO_INT19_OUT)
  __DECLARE_VAR(INT,ADD20_OUT)
  __DECLARE_VAR(STRING,MUX32_OUT)
  __DECLARE_VAR(BOOL,EQ25_OUT)
  __DECLARE_VAR(BOOL,MOVE27_ENO)
  __DECLARE_VAR(INT,MOVE27_OUT)

} VEHICLE_SEL;

void VEHICLE_SEL_init__(VEHICLE_SEL *data__, BOOL retain);
// Code part
void VEHICLE_SEL_body__(VEHICLE_SEL *data__);
// FUNCTION_BLOCK EXIT_SEL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,CONFIRM)
  __DECLARE_VAR(BOOL,SLCT)
  __DECLARE_VAR(REAL,VEICOLO)
  __DECLARE_VAR(BOOL,OK_EXIT)
  __DECLARE_VAR(STRING,CAT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(REAL,AUTO)
  __DECLARE_VAR(REAL,MOTO)
  __DECLARE_VAR(REAL,CAMION)
  __DECLARE_VAR(INT,TIPO)
  R_TRIG R_TRIG0;
  __DECLARE_VAR(BOOL,MUX1_ENO)
  __DECLARE_VAR(REAL,MUX1_OUT)
  __DECLARE_VAR(INT,BOOL_TO_INT19_OUT)
  __DECLARE_VAR(INT,ADD20_OUT)
  __DECLARE_VAR(STRING,MUX32_OUT)
  __DECLARE_VAR(BOOL,EQ25_OUT)
  __DECLARE_VAR(BOOL,MOVE27_ENO)
  __DECLARE_VAR(INT,MOVE27_OUT)

} EXIT_SEL;

void EXIT_SEL_init__(EXIT_SEL *data__, BOOL retain);
// Code part
void EXIT_SEL_body__(EXIT_SEL *data__);
// FUNCTION_BLOCK PARK_STATS
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,EN_CALC)
  __DECLARE_VAR(REAL,GUAD)
  __DECLARE_VAR(INT,TOT_AUTO1)
  __DECLARE_VAR(INT,TOT_MOTO1)
  __DECLARE_VAR(INT,TOT_CAMION1)
  __DECLARE_VAR(INT,TOT_AUTO2)
  __DECLARE_VAR(INT,TOT_MOTO2)
  __DECLARE_VAR(INT,TOT_CAMION2)
  __DECLARE_VAR(INT,TOT_AUTO)
  __DECLARE_VAR(INT,TOT_MOTO)
  __DECLARE_VAR(INT,TOT_CAMION)
  __DECLARE_VAR(REAL,INCASSO)
  __DECLARE_VAR(INT,DAILY_VHCL)

  // FB private variables - TEMP, private and located variables
  R_TRIG R_TRIG0;
  __DECLARE_VAR(BOOL,ADD16_ENO)
  __DECLARE_VAR(REAL,ADD16_OUT)
  __DECLARE_VAR(INT,ADD1_OUT)
  __DECLARE_VAR(INT,BOOL_TO_INT22_OUT)
  __DECLARE_VAR(INT,ADD20_OUT)
  __DECLARE_VAR(INT,ADD2_OUT)
  __DECLARE_VAR(INT,ADD3_OUT)

} PARK_STATS;

void PARK_STATS_init__(PARK_STATS *data__, BOOL retain);
// Code part
void PARK_STATS_body__(PARK_STATS *data__);
// PROGRAM PARKING
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,GEN)
  __DECLARE_VAR(BOOL,CONFERMA)
  __DECLARE_VAR(BOOL,CENT_50)
  __DECLARE_VAR(BOOL,EURO_1)
  __DECLARE_VAR(BOOL,EURO_2)
  __DECLARE_VAR(BOOL,ORA)
  __DECLARE_VAR(BOOL,SLCT_EXIT1)
  __DECLARE_VAR(BOOL,SLCT_EXIT2)
  __DECLARE_VAR(BOOL,CONF1)
  __DECLARE_VAR(BOOL,CONF2)
  __DECLARE_VAR(REAL,RESTO)
  __DECLARE_VAR(REAL,PREZZO)
  __DECLARE_VAR(BOOL,SBARRA1_MAN)
  __DECLARE_VAR(BOOL,SBARRA1_EXIT)
  __DECLARE_VAR(BOOL,SBARRA2_MAN)
  __DECLARE_VAR(BOOL,SBARRA2_EXIT)
  __DECLARE_VAR(BOOL,EXIT_2)
  __DECLARE_VAR(BOOL,ENTER_2)
  __DECLARE_VAR(BOOL,PARK_FULL)
  __DECLARE_VAR(TIME,TEMP1)
  __DECLARE_VAR(TIME,TEMP2)
  __DECLARE_VAR(TIME,TEMP3)

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,START)
  __DECLARE_VAR(BOOL,SLCT)
  __DECLARE_VAR(BOOL,STOP)
  __DECLARE_VAR(INT,CAP)
  __DECLARE_VAR(BOOL,SBARRA1)
  __DECLARE_VAR(BOOL,SBARRA2)
  __DECLARE_VAR(BOOL,ENTER_1)
  __DECLARE_VAR(BOOL,PIANO1_FULL)
  __DECLARE_VAR(BOOL,PIANO2_FULL)
  __DECLARE_VAR(BOOL,EXIT_1)
  TON TON0;
  CTUD CTUD0;
  __DECLARE_VAR(BOOL,EXIT1_EN)
  __DECLARE_VAR(BOOL,EXIT2_EN)
  TON TON1;
  TON TON2;
  CTUD CTUD1;
  TON TON3;
  TOF TOF1;
  GETTONIERA GETTONIERA0;
  VEHICLE_SEL VEHICLE_SEL0;
  VEHICLE_CNT VEHICLE_CNT0;
  EXIT_SEL EXIT_SEL0;
  VEHICLE_CNT VEHICLE_CNT1;
  EXIT_SEL EXIT_SEL1;
  PARK_STATS PARK_STATS0;
  GENERA GENERA0;
  R_TRIG R_TRIG0;
  R_TRIG R_TRIG1;
  R_TRIG R_TRIG2;
  R_TRIG R_TRIG3;
  R_TRIG R_TRIG4;
  __DECLARE_VAR(BOOL,AND127_OUT)

} PARKING;

void PARKING_init__(PARKING *data__, BOOL retain);
// Code part
void PARKING_body__(PARKING *data__);
#endif //__POUS_H
