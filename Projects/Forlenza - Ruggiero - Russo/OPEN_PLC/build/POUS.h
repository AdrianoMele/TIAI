#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// FUNCTION_BLOCK PYTHON_EVAL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_EVAL;

void PYTHON_EVAL_init__(PYTHON_EVAL *data__, BOOL retain);
// Code part
void PYTHON_EVAL_body__(PYTHON_EVAL *data__);
// FUNCTION_BLOCK PYTHON_POLL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_POLL;

void PYTHON_POLL_init__(PYTHON_POLL *data__, BOOL retain);
// Code part
void PYTHON_POLL_body__(PYTHON_POLL *data__);
// FUNCTION_BLOCK PYTHON_GEAR
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(UINT,N)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  PYTHON_EVAL PY_EVAL;
  __DECLARE_VAR(UINT,COUNTER)
  __DECLARE_VAR(UINT,ADD10_OUT)
  __DECLARE_VAR(BOOL,EQ13_OUT)
  __DECLARE_VAR(UINT,SEL15_OUT)
  __DECLARE_VAR(BOOL,AND7_OUT)

} PYTHON_GEAR;

void PYTHON_GEAR_init__(PYTHON_GEAR *data__, BOOL retain);
// Code part
void PYTHON_GEAR_body__(PYTHON_GEAR *data__);
// PROGRAM MAINLD
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,INIT)
  __DECLARE_VAR(BOOL,START_0)
  __DECLARE_VAR(BOOL,FORW_0)
  __DECLARE_VAR(BOOL,RETR_0)
  __DECLARE_VAR(BOOL,QUIETE_STORE)
  __DECLARE_VAR(BOOL,QUIETE_RET)
  __DECLARE_VAR(BOOL,QUIETE_FORW)
  __DECLARE_VAR(BOOL,QUIETE_CAR_SCAR)
  __DECLARE_VAR(BOOL,QUIETE_CAR_ENT)
  __DECLARE_VAR(BOOL,PROVA)
  __DECLARE_VAR(BOOL,PROVA2)

} MAINLD;

void MAINLD_init__(MAINLD *data__, BOOL retain);
// Code part
void MAINLD_body__(MAINLD *data__);
__DECLARE_ARRAY_TYPE(__ARRAY_OF_BOOL_54,BOOL,[54])
// PROGRAM MAIN
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,START_BUTTON)
  __DECLARE_VAR(BOOL,AT_ENTRY_SENSOR)
  __DECLARE_VAR(BOOL,AT_LOAD_SENSOR)
  __DECLARE_VAR(BOOL,AT_MIDDLE_SENSOR)
  __DECLARE_VAR(BOOL,X_SENSOR)
  __DECLARE_VAR(BOOL,Z_SENSOR)
  __DECLARE_VAR(BOOL,MANUAL)
  __DECLARE_VAR(BOOL,AUTO)
  __DECLARE_VAR(BOOL,FORW_BUTTON)
  __DECLARE_EXTERNAL(BOOL,AT_UNLOAD_SENSOR)
  __DECLARE_VAR(BOOL,AT_EXIT_SENSOR)
  __DECLARE_VAR(BOOL,RETRIEVE_BUTTON)
  __DECLARE_VAR(BOOL,CARRELLO_ENTRATA)
  __DECLARE_VAR(BOOL,CARRELLO_CARICO)
  __DECLARE_VAR(BOOL,START_LIGHT)
  __DECLARE_VAR(BOOL,CARICA_PALLET)
  __DECLARE_VAR(BOOL,LIFT)
  __DECLARE_VAR(BOOL,SCARICA_PALLET)
  __DECLARE_VAR(BOOL,FORW_LIGHT)
  __DECLARE_VAR(BOOL,ERRORE_0)
  __DECLARE_VAR(BOOL,CARRELLO_USCITA)
  __DECLARE_VAR(BOOL,CARRELLO_SCARICO)
  __DECLARE_VAR(BOOL,RETR_LIGHT)
  __DECLARE_VAR(INT,POSITION)
  __DECLARE_VAR(INT,MANUAL_POSITION)
  __DECLARE_VAR(INT,COUNTER)
  __DECLARE_VAR(BOOL,SYNC0)
  __DECLARE_VAR(BOOL,SYNC1)
  __DECLARE_VAR(BOOL,SYNC2)
  __DECLARE_VAR(BOOL,SYNC3)
  __DECLARE_VAR(BOOL,SYNC4)
  __DECLARE_VAR(BOOL,TRAS_FERMO)
  __DECLARE_VAR(__ARRAY_OF_BOOL_54,MAGAZZINO)
  __DECLARE_VAR(INT,I)
  __DECLARE_VAR(BOOL,TROVATO)
  __DECLARE_VAR(INT,POS)
  __DECLARE_VAR(INT,MAX_DIM)
  __DECLARE_VAR(INT,CONT_MAG)
  __DECLARE_VAR(BOOL,OK_RETRIEVE)
  __DECLARE_VAR(BOOL,OK_INS)
  __DECLARE_VAR(BOOL,OK_RET_POS)
  __DECLARE_VAR(BOOL,SISTEMA_AVVIATO)
  __DECLARE_VAR(BOOL,STORE_AVVIATO)
  __DECLARE_VAR(BOOL,RETRIEVE_AVVIATO)
  __DECLARE_VAR(BOOL,FORWARD_AVVIATO)
  STEP __step_list[49];
  UINT __nb_steps;
  ACTION __action_list[29];
  UINT __nb_actions;
  __IEC_BOOL_t __transition_list[52];
  __IEC_BOOL_t __debug_transition_list[52];
  UINT __nb_transitions;
  TIME __lasttick_time;

} MAIN;

void MAIN_init__(MAIN *data__, BOOL retain);
// Code part
void MAIN_body__(MAIN *data__);
// PROGRAM SMISTATORE
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_EXTERNAL(BOOL,AT_UNLOAD_SENSOR)
  __DECLARE_VAR(BOOL,TURN_ENTRY)
  __DECLARE_VAR(BOOL,AT_FRONT)
  __DECLARE_VAR(BOOL,PALLET_SENSOR)
  __DECLARE_VAR(BOOL,LOW)
  __DECLARE_VAR(BOOL,MEDIUM)
  __DECLARE_VAR(BOOL,HIGHT)
  __DECLARE_VAR(BOOL,AT_RIGHT)
  __DECLARE_VAR(BOOL,AT_RIGHT_EXIT)
  __DECLARE_VAR(BOOL,AT_LEFT)
  __DECLARE_VAR(BOOL,AT_LEFT_EXIT)
  __DECLARE_VAR(BOOL,AT_FWD)
  __DECLARE_VAR(BOOL,AT_FWD_EXIT)
  __DECLARE_VAR(BOOL,ENTERCONVEYOR)
  __DECLARE_VAR(BOOL,ENTERCONVEYOR1)
  __DECLARE_VAR(BOOL,LOADED_TURN)
  __DECLARE_VAR(BOOL,RIGHTCONVEYOR)
  __DECLARE_VAR(BOOL,TURN)
  __DECLARE_VAR(BOOL,LOADED_TURN_RIGHT)
  __DECLARE_VAR(BOOL,LEFTCONVEYOR)
  __DECLARE_VAR(BOOL,FRCONVEYOR)
  __DECLARE_VAR(BOOL,WAIT)
  __DECLARE_VAR(BOOL,WAIT1)
  __DECLARE_VAR(BOOL,WAIT2)
  __DECLARE_VAR(BOOL,WAIT3)
  __DECLARE_VAR(BOOL,LEFT_OK)
  __DECLARE_VAR(BOOL,RIGHT_OK)
  __DECLARE_VAR(BOOL,FWD_OK)
  __DECLARE_VAR(INT,CONT)
  STEP __step_list[36];
  UINT __nb_steps;
  ACTION __action_list[16];
  UINT __nb_actions;
  __IEC_BOOL_t __transition_list[39];
  __IEC_BOOL_t __debug_transition_list[39];
  UINT __nb_transitions;
  TIME __lasttick_time;

} SMISTATORE;

void SMISTATORE_init__(SMISTATORE *data__, BOOL retain);
// Code part
void SMISTATORE_body__(SMISTATORE *data__);
#endif //__POUS_H
